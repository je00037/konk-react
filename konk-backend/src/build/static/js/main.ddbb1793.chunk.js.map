{"version":3,"sources":["components/AppContent.js","images/kev.png","components/KevContainer.js","components/QuoteContainer.js","components/StartButton.js","components/ItsKevButton.js","components/NotKevButton.js","components/Points.js","components/ResetButton.js","components/LeaderboardButton.js","components/LeaderboardModal.js","components/SubmitScore.js","utils/quoteGenerator.js","images/gd.png","components/GrandDesignsHeader.js","components/App.js","index.js"],"names":["leaderboardData","KevContainer","src","kev","className","alt","QuoteContainer","quoteAuthor","statusProp","quoteProp","pointsProp","quoteText","quotation","author","id","StartButton","buttonText","handleClick","clickHandler","resetClickHandler","onClick","ItsKevButton","console","log","NotKevButton","Points","questionsAskedProp","ResetButton","LeaderboardButton","showHide","LeaderboardModal","setDisplay","apiData","map","item","index","user","points","_id","type","SubmitScore","useState","name","setName","submit","setSubmit","updateLeaderboard","a","fetch","method","body","JSON","stringify","headers","then","response","status","onSubmit","event","preventDefault","htmlFor","value","onChange","target","quotes","getQuote","arr","min","max","length","Math","floor","random","placeholderQuote","usedQuotes","questionsAsked","fetchData","result","json","AppContent","quote","setQuote","setStatus","setPoints","scoresModalShow","setScoresModalShow","useEffect","handleResetClick","handleGuessClick","buttonPressed","handleScoresModal","newQuoteObject","includes","push","GrandDesignsHeader","gd","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddbb1793.chunk.js","sourcesContent":["import '../css/App.css';\nimport React, { useState, useEffect } from 'react';\nimport KevContainer from './KevContainer.js';\nimport QuoteContainer from './QuoteContainer.js';\nimport StartButton from './StartButton.js';\nimport ItsKevButton from './ItsKevButton.js';\nimport NotKevButton from './NotKevButton.js';\nimport Points from './Points.js';\nimport ResetButton from './ResetButton.js';\nimport LeaderboardButton from './LeaderboardButton.js';\nimport LeaderboardModal from './LeaderboardModal.js';\nimport SubmitScore from './SubmitScore.js';\nimport { newQuote, quotes } from '../utils/quoteGenerator';\n\nconst placeholderQuote = {author: \"Placeholder\", quotation: \"Hit the button to start.\"};\nlet usedQuotes = [];\nlet questionsAsked = 0;\nlet leaderboardData;\n\nconst fetchData = async () => {\n  const result = await fetch('/leaderboard');\n  leaderboardData = await result.json();\n};\n\nconst AppContent = () => {\n  const [quote, setQuote] = useState(placeholderQuote);\n  const [status, setStatus] = useState(\"start\");\n  const [points, setPoints] = useState(0);\n  const [scoresModalShow, setScoresModalShow] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  if (status === \"reset\") {\n    usedQuotes = [];\n    setQuote(placeholderQuote);\n    setPoints(0);\n    setStatus(\"open\");\n  }\n\n  const handleStartClick = () => {\n    if (usedQuotes.length === quotes.length - 1) {\n      setStatus(\"end\");\n      } else {\n          let newQuoteObject;\n          do {\n            newQuoteObject = newQuote();\n          } while (usedQuotes.includes(newQuoteObject.id));\n          usedQuotes.push(newQuoteObject.id);\n          setQuote(newQuoteObject);\n          questionsAsked += 1;\n          setStatus(\"open\");\n        }\n  }\n\n  const handleResetClick = () => {\n    questionsAsked = 0;\n    setStatus(\"reset\");\n  }\n\n  const handleGuessClick = (buttonPressed) =>  { \n    \n    if (buttonPressed === \"kev\") {\n      if (quote.author === \"Kevin McCloud\") { \n        setStatus(\"correct-kev\");\n        setPoints(points => {\n            return points + 1;\n        });\n  } else {\n        setStatus(\"incorrect-kev\");\n      }\n    } \n\n    if (buttonPressed === \"not-kev\") {\n      if (quote.author !== \"Kevin McCloud\") { \n        setStatus(\"correct-notkev\");\n        setPoints(points => {\n            return points + 1\n        });\n    } else {\n          setStatus(\"incorrect-notkev\");}\n    }  \n  }\n\n  const handleScoresModal = async () => {\n    await fetchData();\n    setScoresModalShow(!scoresModalShow);\n  }\n\n  return (\n    <>\n      {scoresModalShow ? <LeaderboardModal setDisplay={handleScoresModal} apiData={leaderboardData} /> : null}\n      <div className=\"Points-row\">\n        <Points pointsProp={points} questionsAskedProp={questionsAsked} />\n        <ResetButton clickHandler={handleResetClick} />\n        <LeaderboardButton showHide={handleScoresModal} />\n      </div>\n      <div className='App-content'>\n        <div className='Kev-container'>\n          <KevContainer />\n        </div>\n      <div className=\"Quote-container\">\n        <QuoteContainer statusProp={status} quoteProp={quote} pointsProp={points} />\n        {status === \"end\" ? <SubmitScore points={points} /> : null}\n        <StartButton statusProp={status} clickHandler={handleStartClick} resetClickHandler={handleResetClick} />\n        <ItsKevButton statusProp={status} clickHandler={handleGuessClick} />\n        <NotKevButton statusProp={status} clickHandler={handleGuessClick} />\n      </div>\n    </div>\n  </>\n  );\n}\n\nexport default AppContent;","export default __webpack_public_path__ + \"static/media/kev.910c36b9.png\";","import kev from \"../images/kev.png\";\nimport '../css/App.css';\n\nconst KevContainer = () => {\n    return (\n        <img src={kev} className=\"Kev-image\" alt=\"kevin-mccloud\" />\n    );\n}\n\nexport default KevContainer;","import React from 'react';\nimport '../css/App.css';\n\nconst QuoteContainer = ({statusProp, quoteProp, pointsProp}) => {\n  const poorEffortMessage = \"That's rubbish - more Grand Designs needed for you.\";\n  const notBadMessage = \"Not bad - you're starting to tune-in to Kev.\";\n  const greatMessage = \"Excellent job, are you Kev himself?\";\n  let quoteText = quoteProp.quotation;\n  let quoteAuthor;\n\n\n  if (statusProp === \"incorrect-kev\" || statusProp === \"correct-notkev\") {\n    quoteAuthor = quoteProp.author;\n  }\n\n  return (\n    <div className=\"Quote-text-container\">{statusProp === \"end\" ? \n        <p className=\"Quote-text\">Game over! You scored <strong>{pointsProp}</strong> points.<br/><br/> {pointsProp <= 4 ? poorEffortMessage : pointsProp <= 10 ? notBadMessage : greatMessage}</p> : <p className=\"Quote-text\">{quoteText}</p>}\n      <div id=\"author-label\">{quoteAuthor}</div>\n    </div>\n  );\n}\n\nexport default QuoteContainer;\n\n","import '../css/App.css';\n\nconst StartButton = ({statusProp, clickHandler, resetClickHandler}) => {\n    let buttonText;\n    let handleClick;\n    switch(statusProp) {\n        case \"start\" :\n            buttonText = \"Go!\";\n            handleClick = clickHandler;\n            break;\n        case \"end\" :\n            buttonText = \"Play Again?\";\n            handleClick = resetClickHandler;\n            break;\n        default :\n            buttonText = \"Next\";\n            handleClick = clickHandler;\n    }\n\n    return (\n            <button id=\"start-button\" className=\"Button Button-orange\" onClick={handleClick}>{buttonText}</button>\n    );\n}\n\nexport default StartButton;\n\n","import '../css/App.css';\n\nconst ItsKevButton = ({statusProp, clickHandler}) => {\n    let buttonText;\n\n    switch(statusProp) {\n        case \"start\" :\n        case \"open\" :\n        case \"correct-notkev\" :\n        case \"incorrect-notkev\" :\n            buttonText = \"It's Kev\";\n            break;\n        case \"correct-kev\" : \n            buttonText = \"Correct!\";\n            break;\n        case \"incorrect-kev\" :\n            buttonText = \"Wrong!\";\n            break;\n        case \"end\" :\n            return null;\n        default :\n            console.log(\"the game status is set to an unexpected value\");\n    }\n\n    return (\n        <button id=\"its-kev-button\" className=\"Button Button-green\" onClick={() => clickHandler(\"kev\")}>{buttonText}</button>\n    )\n}\n\nexport default ItsKevButton;","import '../css/App.css';\n\nconst NotKevButton = ({statusProp, clickHandler}) => {\n        \n    let buttonText;\n\n    switch(statusProp) {\n        case \"start\" :\n        case \"open\" :\n        case \"correct-kev\" :\n        case \"incorrect-kev\" :\n            buttonText = \"Not Kev\";\n            break;\n        case \"correct-notkev\" :\n            buttonText = \"Correct!\";\n            break;\n        case \"incorrect-notkev\" :\n            buttonText = \"Wrong!\";\n            break;\n        case \"end\" :\n            return null;\n        default :\n            console.log(\"game status is set to an unexpected value\");\n    }\n\n    return (\n        <button id=\"not-kev-button\" className=\"Button Button-red\" onClick={() => clickHandler(\"not-kev\")}>{buttonText}</button>\n    )\n}\n\nexport default NotKevButton;","import '../css/App.css';\n\nconst Points = ({pointsProp, questionsAskedProp}) => {\n\n    return (\n        <div>\n            <p id=\"points-label\">Points: <span id=\"points-number\">{pointsProp} / {questionsAskedProp}</span></p>\n        </div>\n    )\n}\n\nexport default Points;","import '../css/App.css';\n\nconst ResetButton = ({clickHandler}) => {\n    return (\n        <button className=\"Button Button-grey\" onClick={clickHandler}>Reset</button>\n    )\n};\n\nexport default ResetButton;","import '../css/App.css';\n\nconst LeaderboardButton = ({showHide}) => {\n    return (\n        <button className=\"Button Button-blue\" onClick={showHide}>Scores</button>\n    )\n}\n\nexport default LeaderboardButton;","import '../css/App.css';\n\nconst LeaderboardModal = ({setDisplay, apiData}) => {\n   \n/*\n    TRY HOLDING THE LEADERBOARD DATA IN APPCONTENT AND PASS TO MODAL AS A PROP, THEN HAVE AN UPDATER FUNCTION\n    ALSO IN APPCONTENT WHICH GETS THE LATEST DATA FROM DB AND UPDATES THE LEADERBOARD DATA VARIABLE. THEN PASS THIS\n    FUNCTION TO LEADERBOARD BUTTON TO BE TRIGGERED ON CLICK\n*/\n\n    return (\n        <div className=\"modal display-block\">\n            <section className=\"modal-main\">\n                <p className=\"modal-heading\">Here are the current high scores:</p>\n                <ol className=\"leaders-list\">\n                    {apiData.map((item, index) => index === 0 ? <li className=\"modal-list-item-leader\" key={item._id}>{item.user}, {item.points}</li> : <li className=\"modal-list-item\" key={item._id}>{item.user}, {item.points}</li>)}\n                </ol>\n                <button type=\"button\" className=\"Button Button-grey\" onClick={setDisplay}>Close</button>\n            </section>\n        </div>\n    )\n}\n\nexport default LeaderboardModal;","import '../css/App.css';\nimport { useState } from 'react';\n\nconst SubmitScore = ({points}) => {\n    const [name, setName] = useState(\"\");\n    const [submit, setSubmit] = useState(false);\n\n    const handleChange = (event) => {\n        setName(event.target.value);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        updateLeaderboard();\n    }\n\n    const updateLeaderboard = async () => {\n        await fetch('/leaderboard', {\n            method: 'post',\n            body: JSON.stringify({\n                \"user\": name,\n                \"points\": points,\n            }),\n            headers: {\n                'Accept': 'application/json',\n                \"Content-Type\": \"application/json\",\n            },\n        }).then(response => { \n            if (response.status === 200) {\n               setSubmit(true)}}\n        );\n    }\n    \n    return (\n        <form id=\"name-submit\" onSubmit={handleSubmit}>\n            <label className=\"Quote-text\" htmlFor=\"name\">{ !submit ? \"Enter your name to submit your score!\" : \"Submitted!\" }</label><br/>\n            { !submit ? <input id=\"name\" type=\"text\" value={name} onChange={handleChange}></input> : null }\n            { !submit ? <input className=\"Button Button-blue\" id=\"submit\" type=\"submit\" ></input> : null }\n        </form>\n    )\n}\n\n\nexport default SubmitScore;","import quoteData from '../data.json';\n\nexport const quotes = quoteData;\n\nconst randomInteger = (min, max) => \n    Math.floor(Math.random() * (max - min + 1)) + min;\n  \n\nconst getQuote = (arr) => {\n    let randomIndex = randomInteger(1, quotes.length - 1);\n    let randomQuote = arr[randomIndex];\n    return randomQuote;\n  }\n\nexport const newQuote = () => getQuote(quotes);\n","export default __webpack_public_path__ + \"static/media/gd.e1dc8a4f.png\";","import gd from \"../images/gd.png\";\nimport '../css/App.css';\n\nconst GrandDesignsHeader = () => {\n    return (\n        <div className=\"Gd-header\">\n            <img src={gd} className=\"Gd-logo\" alt=\"grand-designs-logo\" />\n        </div>\n    );\n}\n\nexport default GrandDesignsHeader;","import '../css/App.css';\nimport AppContent from './AppContent.js';\nimport GrandDesignsHeader from './GrandDesignsHeader.js';\n\nconst App = () => {\n  return (\n    <>\n      <GrandDesignsHeader />\n      <AppContent />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}